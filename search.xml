<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Android 6.0+ 动态权限Permission]]></title>
    <url>%2F2018%2F04%2F01%2FPermission%2F</url>
    <content type="text"><![CDATA[Android 6.0+ 动态权限 需要申请的权限表Permission GroupPermissions CALENDAR READ_CALENDAR WRITE_CALENDAR CAMERA CAMERA CONTACTS READ_CONTACTS WRITE_CONTACTS GET_ACCOUNTS LOCATION ACCESS_FINE_LOCATION ACCESS_COARSE_LOCATION MICROPHONE RECORD_AUDIO PHONE READ_PHONE_STATE READ_PHONE_NUMBERS CALL_PHONE ANSWER_PHONE_CALLS (must request at runtime) READ_CALL_LOG WRITE_CALL_LOG ADD_VOICEMAIL USE_SIP PROCESS_OUTGOING_CALLS ANSWER_PHONE_CALLS READ_PHONE_NUMBERS SENSORS BODY_SENSORS SMS SEND_SMS RECEIVE_SMS READ_SMS RECEIVE_WAP_PUSH RECEIVE_MMS STORAGE READ_EXTERNAL_STORAGE WRITE_EXTERNAL_STORAGE 以上权限需要动态申请（当targetSdkVersion &gt;= 23 时） 检查是否有权限 1ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE) 申请权限 123456ActivityCompat.requestPermissions(this, new String[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;, 1002)``` 3. 申请回调&lt;/br&gt; @Override public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) { switch (requestCode){ case 1002: if(grantResults.length &gt; 0 &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED){ //申请成功将执行的操作 }else{ Toast.makeText(this, &quot;需要申请存储权限&quot;, Toast.LENGTH_SHORT).show(); } break; } super.onRequestPermissionsResult(requestCode, permissions, grantResults); } 12- 1, 2 步完整代码 if(ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED){ ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1002); }else{ //申请成功将执行的操作 } `]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建Hexo博客]]></title>
    <url>%2F2018%2F03%2F09%2F%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[第一次建立博客的记录 第一步 下载node.js并安装 下载Git并安装 下载安装Hexo(npm install -g hexo) 第二步 建立GitHub Pages New repository -&gt; 你的Github用户名.github.io 作为仓库名 第三步 创建本地文件 新建一个文件夹，以Blog为例 在文件夹目录下右键选择Git Bash Here，并输入hexo init（初始化博客） 运行 hexo server，此时可以通过输入地址localhost:4000访问博客 第四步 关联GitHub Pages 打开Blog目录下的_config.yml配置文件，在末尾加入以下代码 1234deploy: type: git repository: https://github.com/123/123.github.io.git branch: master https://github.com/123/123.github.io.git 为你刚刚新建仓库的链接 注意以上代码的格式 所有：之后都要加一个空格 type，repository，branch 3个标签之前加2个空格 输入 1npm install hexo-deployer-git --save 输入 123hexo clean hexo g hexo d 现在就可以登上 xxxx.github.io 访问你的博客了 更换主题(Next主题) 下载主题（进入themes目录） 1git clone https://github.com/iissnan/hexo-theme-next.git 打开__config.yml文件，将themes修改为下载到的主题文件夹的名字,比如 1theme: next 修改主题的语言，在__config.yml文件的最上方修改（简体中文） 1language: zh-Hans 运行输入 12hexo ghexo d 上传博客 在文件夹目录下，使用Git命令输入 1hexo new &quot;标题&quot; 在/source/_posts下会生成对应的.md文件，在该.md文件中编写你的博客（使用MakeDown语法） 编写完成后，运行 12hexo g hexo d 可以在生成本地文件时运行 hexo clean 用来清除本地缓存文件]]></content>
      <tags>
        <tag>建站</tag>
      </tags>
  </entry>
</search>
